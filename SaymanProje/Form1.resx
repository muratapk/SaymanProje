<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAQEAAgEBAAQDAgECAgEFAQEBBQUEAwEEAwIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAcGABMPDQABAQEDAQAADwEBARkEAwIKAgIBBgAA
        AAADAgEAAQEBAAQDAgECAQEHAAAADwAAABoAAAAlAAAAMQAAADsAAAA9AQAAIwIBAQMBAQEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEBBAAAAA0AAAAfAAAAPRMMCGceEwySAgEBUgIB
        ASsAAABFAAAAKwAAAB8AAAAlAAAAMgEBAT8MCQdPHxgSYTImHndCMiePQzMokSIaFGYAAABKAQEAHQAA
        AAAFBAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAgEAAAAuFw8JhjAeE7lmQSjedksv931Q
        MvUBAQGXAAAAiBkQCrorGxG8BQQDkxoVEIg9LySXUz8xtVxGNtJhSTjoY0o592RLOv5lTDv/YEg43Ssh
        GW4AAAA4AwIBAwICAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxIMXBkQCop7UzbtiFw7/8SG
        V/+ebkj/nG1I/hYVFPoQERL3PSkc9J5mQP9ySS73TTQj+j8wJP9fSTn/cFhI/35oWf+SgHT/q52U/5uK
        f/9qUUD/VkEzvAUEA0cAAAALAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQCu5Zkgv/JJx
        Tv2ZeFT/06l3/5p8WP+tjWT/REI+/z0/QP9bTDz/tYRZ/72CVP+jbET/c00y/5uTjP/g29f/8O3r//v6
        +v//////8/Hw/4h0Zv9gSDflHRYRXwAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAm
        G4gpIhv/cmVN/5mHZP+SgmL/Zl1K/1dSR/9GRkX/Ozw8/01FO/9/aEr/yJ5u/6+FW/+cck//tLKx////
        /////////f39//7+/v//////tqqi/2VMO/g3KiB8AAAAKQAAAAAFBAMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJxwVeTEyMP1ZW1f/UE5H/0RFRP9HSUn/R0lK/0hFQ/9EPjn/QEFA/zc4Nv9WTT//dmRJ/21Z
        P/+BgX//4eHg/8TEx/+/v8L/zs7M/+Pj4v/X0s7/cltL/0w5LKQAAAA6AgEBBQICAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAnHRaoQURD/2ltbP9XWVj/U1RT/1pWUP9zXUr/mGpH/6NxSv99Y0r/VVFJ/0FC
        Qv8+Pz3/Nzg3/zo8ZP9JS7T/Ky24/y0vtv9LTaj/goOk/7e2tv9/bF7/WkM0zAoIBk0AAAAQAQEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADosIocnIRz/NTc2/19jYv9nY1j/sZJq/9mrd//jrnj/5qt0/9mb
        Zv+kelT/WFJJ/1VXVf8zNm//HiDG/zEyy/9FR8n/JSfR/wIC3v8LDb//Y2aj/4d7c/9hSTjrJRwWZwAA
        ACAAAAAADQsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAalA/Sl9IOPJiWFL/Q0VF/zc4Nf93a1X/yrCC/+K9
        h//IonT/oIRm/3xvYf9XWVX/MTM8/yIkqf9fYMX/1NXh/+/w8f/a2+n/Xl/J/yYotf9BRJ3/kIua/2lS
        Qf1BMSaMAAAAMQQDAwEDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAABmTTwZZUs6z5mIfP/f397/hISE/zM1
        Nf9FRT//dnJl/2xuaP9UWln/Njo6/zM0M/9MTGL/MjSu/4eKmv+usKn/tLWy/8jIxv+/v8v/bnGr/7u9
        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
        AA/4AAAP+AAAH/wAAH/8AAP//gAf//8B//8=
</value>
  </data>
</root>